<%= disclaimer() %>
package <%= ns %>.client.widget.event;

import com.google.gwt.event.shared.GwtEvent;
import com.google.gwt.core.client.JavaScriptObject;

/**
 * <%= getDescription(' ') %>
 */
public class <%= camelCase(name) %>Event extends GwtEvent<<%= camelCase(name) %>EventHandler> {

    public static Type<<%= camelCase(name) %>EventHandler> TYPE = new Type<<%= camelCase(name) %>EventHandler>();

    private <%= ns %>.client.element.event.<%= camelCase(name) %>Event nativeEvent;

    public <%= camelCase(name) %>Event(<%= ns %>.client.element.event.<%= camelCase(name) %>Event nativeEvent) {
        this.nativeEvent = nativeEvent;
    }

    public Type<<%= camelCase(name) %>EventHandler> getAssociatedType() {
        return TYPE;
    }

    protected void dispatch(<%= camelCase(name) %>EventHandler handler) {
        handler.on<%= camelCase(name) %>(this);
    }

    public <%= ns %>.client.element.event.<%= camelCase(name) %>Event getNativeEvent() {
        return nativeEvent;
    }
<% if (hasParams())  _.forEach(params, function(param){ %>
    /**
     * <%= getDescription('     ', param) %>
     */
    public <%= computeType(param.type) %> <%= computeGetterWithPrefix(param) %>() {
        return getNativeEvent().getDetail().<%= computeGetterWithPrefix(param) %>();
    }
<% }); %>
}
